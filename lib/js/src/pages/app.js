// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Data        = require("../data.js");
var Task        = require("../task.js");
var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

var component = ReasonReact.statefulComponent("App");

function make(init, update, render, _) {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      var replaceState = function (nextState) {
        return Curry._2(self[/* update */2], (function (state, _) {
                      return /* Update */Block.__(0, [state]);
                    }), nextState);
      };
      var dispatch = function (a) {
        console.log("Action ", Data.printAction(a));
        var match = self[/* state */3];
        var match$1 = Curry._2(update, a, match[0]);
        var eff = match$1[1];
        var nextState = match$1[0];
        console.log("State", Data.modelEncoder(nextState));
        replaceState(/* tuple */[
              nextState,
              dispatch
            ]);
        if (eff) {
          return Task.fork(dispatch, dispatch, eff[0]);
        } else {
          return /* () */0;
        }
      };
      return /* Update */Block.__(0, [/* tuple */[
                  init,
                  dispatch
                ]]);
    });
  newrecord[/* render */9] = (function (self) {
      var match = self[/* state */3];
      return Curry._2(render, match[0], match[1]);
    });
  newrecord[/* initialState */10] = (function () {
      return /* tuple */[
              init,
              (function () {
                  return /* () */0;
                })
            ];
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
