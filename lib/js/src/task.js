// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function make(create, fail, success) {
  return Curry._2(create, fail, success);
}

function succeed(x) {
  return (function (_, param) {
      return Curry._1(param, x);
    });
}

function fail(x) {
  return (function (param, _) {
      return Curry._1(param, x);
    });
}

function fork(fail, success, task) {
  return Curry._2(task, fail, success);
}

function map(f, task) {
  return (function (param, param$1) {
      return Curry._2(task, param, (function (x) {
                    return Curry._1(param$1, Curry._1(f, x));
                  }));
    });
}

function chain(f, task) {
  return (function (param, param$1) {
      return Curry._2(task, param, (function (x) {
                    return Curry._3(f, x, param, param$1);
                  }));
    });
}

function biMap(mapFail, mapSuccess, task) {
  return (function (param, param$1) {
      return Curry._2(task, (function (err) {
                    return Curry._1(param, Curry._1(mapFail, err));
                  }), (function (ok) {
                    return Curry._1(param$1, Curry._1(mapSuccess, ok));
                  }));
    });
}

function fromLazyPromise(f) {
  return (function (param, param$1) {
      Curry._1(f, /* () */0).then(param$1, param);
      return /* () */0;
    });
}

function fromOption(err, opt) {
  if (opt) {
    var x = opt[0];
    return (function (_, param) {
        return Curry._1(param, x);
      });
  } else {
    return (function (param, _) {
        return Curry._1(param, err);
      });
  }
}

function fromResult(res) {
  if (res.tag) {
    var x = res[0];
    return (function (_, param) {
        return Curry._1(param, x);
      });
  } else {
    var x$1 = res[0];
    return (function (param, _) {
        return Curry._1(param, x$1);
      });
  }
}

exports.make            = make;
exports.succeed         = succeed;
exports.fail            = fail;
exports.fork            = fork;
exports.map             = map;
exports.chain           = chain;
exports.biMap           = biMap;
exports.fromLazyPromise = fromLazyPromise;
exports.fromOption      = fromOption;
exports.fromResult      = fromResult;
/* No side effect */
