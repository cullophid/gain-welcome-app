// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Remote      = require("./remote.js");
var Js_dict     = require("bs-platform/lib/js/js_dict.js");
var Js_boolean  = require("bs-platform/lib/js/js_boolean.js");
var Json_decode = require("bs-json/lib/js/src/json_decode.js");

function pageEncoder(page) {
  switch (page) {
    case 0 : 
        return "Login";
    case 1 : 
        return "Home";
    case 2 : 
        return "VisitorInterests";
    case 3 : 
        return "VisitorDetails";
    case 4 : 
        return "ThankYou";
    
  }
}

var emptyLoginForm = /* record */[
  /* email */"",
  /* password */""
];

function loginFormEncoder(param) {
  return Js_dict.fromList(/* :: */[
              /* tuple */[
                "email",
                param[/* email */0]
              ],
              /* :: */[
                /* tuple */[
                  "password",
                  param[/* password */1]
                ],
                /* [] */0
              ]
            ]);
}

function userDecoder(json) {
  return /* record */[
          /* email */Json_decode.field("email", Json_decode.string, json),
          /* forenames */Json_decode.field("forenames", Json_decode.string, json),
          /* lastname */Json_decode.field("lastname", Json_decode.string, json)
        ];
}

function userEncoder(user) {
  return Js_dict.fromList(/* :: */[
              /* tuple */[
                "email",
                user[/* email */0]
              ],
              /* :: */[
                /* tuple */[
                  "forenames",
                  user[/* forenames */1]
                ],
                /* :: */[
                  /* tuple */[
                    "lastname",
                    user[/* lastname */2]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function sessionEncoder(session) {
  return Js_dict.fromList(/* :: */[
              /* tuple */[
                "token",
                session[/* token */0]
              ],
              /* :: */[
                /* tuple */[
                  "user",
                  userEncoder(session[/* user */1])
                ],
                /* [] */0
              ]
            ]);
}

function sessionDecoder(json) {
  return /* record */[
          /* token */Json_decode.field("token", Json_decode.string, json),
          /* user */Json_decode.field("user", userDecoder, json)
        ];
}

function visitorTypeEncoder(visitorType) {
  switch (visitorType) {
    case 0 : 
        return "NotAsked";
    case 1 : 
        return "Private";
    case 2 : 
        return "PrivateToBusiness";
    case 3 : 
        return "Business";
    case 4 : 
        return "N/A";
    
  }
}

function visitorInterestsEncoder(visitorInterests) {
  switch (visitorInterests) {
    case 0 : 
        return "NotAsked";
    case 1 : 
        return "Browsing";
    case 2 : 
        return "Learn";
    case 3 : 
        return "Testdrive";
    case 4 : 
        return "Financing";
    case 5 : 
        return "Buy";
    
  }
}

function visitorFormEncoder(queueForm) {
  return Js_dict.fromList(/* :: */[
              /* tuple */[
                "visitorType",
                visitorTypeEncoder(queueForm[/* visitorType */0])
              ],
              /* :: */[
                /* tuple */[
                  "visitorInterests",
                  visitorInterestsEncoder(queueForm[/* visitorInterests */1])
                ],
                /* :: */[
                  /* tuple */[
                    "name",
                    queueForm[/* name */2]
                  ],
                  /* :: */[
                    /* tuple */[
                      "mobile",
                      queueForm[/* mobile */3]
                    ],
                    /* :: */[
                      /* tuple */[
                        "concent",
                        Js_boolean.to_js_boolean(queueForm[/* concent */4])
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]);
}

var emptyVisitorForm = /* record */[
  /* visitorType : NotAsked */0,
  /* visitorInterests : NotAsked */0,
  /* name */"",
  /* mobile */"",
  /* concent : false */0
];

var emptyModel = /* record */[
  /* session : NotAsked */0,
  /* page : Login */0,
  /* loginForm */emptyLoginForm,
  /* visitorForm */emptyVisitorForm
];

function modelEncoder(model) {
  return Js_dict.fromList(/* :: */[
              /* tuple */[
                "session",
                Remote.encoder((function (prim) {
                        return prim;
                      }), sessionEncoder, model[/* session */0])
              ],
              /* :: */[
                /* tuple */[
                  "page",
                  pageEncoder(model[/* page */1])
                ],
                /* :: */[
                  /* tuple */[
                    "loginForm",
                    loginFormEncoder(model[/* loginForm */2])
                  ],
                  /* :: */[
                    /* tuple */[
                      "visitorForm",
                      visitorFormEncoder(model[/* visitorForm */3])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function printAction(action) {
  if (typeof action === "number") {
    if (action) {
      return "SubmitQueueFormSuccess";
    } else {
      return "NoOp";
    }
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return "UpdateLoginForm " + JSON.stringify(loginFormEncoder(action[0]));
      case 1 : 
          return "Login " + JSON.stringify(loginFormEncoder(action[0]));
      case 2 : 
          return "LoginSuccess " + JSON.stringify(sessionEncoder(action[0]));
      case 3 : 
          return "LoginError " + JSON.stringify(action[0]);
      case 4 : 
          return "SelectVisitorType " + JSON.stringify(visitorTypeEncoder(action[0]));
      case 5 : 
          return "SelectVisitorInterests " + JSON.stringify(visitorInterestsEncoder(action[0]));
      case 6 : 
          return "UpdateVisitorForm " + JSON.stringify(visitorFormEncoder(action[0]));
      case 7 : 
          return "SubmitVisitorForm " + JSON.stringify(visitorFormEncoder(action[0]));
      case 8 : 
          return "SubmitQueueFormError " + JSON.stringify(action[0]);
      
    }
  }
}

exports.pageEncoder             = pageEncoder;
exports.emptyLoginForm          = emptyLoginForm;
exports.loginFormEncoder        = loginFormEncoder;
exports.userDecoder             = userDecoder;
exports.userEncoder             = userEncoder;
exports.sessionEncoder          = sessionEncoder;
exports.sessionDecoder          = sessionDecoder;
exports.visitorTypeEncoder      = visitorTypeEncoder;
exports.visitorInterestsEncoder = visitorInterestsEncoder;
exports.visitorFormEncoder      = visitorFormEncoder;
exports.emptyVisitorForm        = emptyVisitorForm;
exports.emptyModel              = emptyModel;
exports.modelEncoder            = modelEncoder;
exports.printAction             = printAction;
/* Js_dict Not a pure module */
