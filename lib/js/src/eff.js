// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Data         = require("./data.js");
var Task         = require("./task.js");
var Util         = require("./util.js");
var Block        = require("bs-platform/lib/js/block.js");
var Curry        = require("bs-platform/lib/js/curry.js");
var GraphQL      = require("./graphQL.js");
var Json_decode  = require("bs-json/lib/js/src/json_decode.js");
var AsyncStorage = require("./asyncStorage.js");

function flip(f, a, b) {
  return Curry._2(f, b, a);
}

function login(param) {
  var variables = {
    email: param[/* email */0],
    password: param[/* password */1]
  };
  var partial_arg = Json_decode.at(/* :: */[
        "data",
        /* :: */[
          "authenticate",
          /* [] */0
        ]
      ], Data.sessionDecoder);
  var decodeSession = function (param) {
    return Util.decode(partial_arg, param);
  };
  return /* Some */[Task.biMap((function (err) {
                  return /* LoginError */Block.__(3, [err]);
                }), (function (ok) {
                  return /* LoginSuccess */Block.__(2, [ok]);
                }), Task.chain((function (sess) {
                      return Task.map((function () {
                                    return sess;
                                  }), AsyncStorage.setItem("jwt", sess[/* token */0]));
                    }), Task.chain(Task.fromResult, Task.map(decodeSession, Task.map((function (x) {
                                  console.log("RES", x);
                                  return x;
                                }), GraphQL.request("\n    query Authenticate($email: String!, $password:String!) {\n      authenticate(email: $email, password:$password) {\n        token,\n        user {\n          id,\n          email,\n          forenames,\n          lastname\n          dealership {\n            id,\n            name\n          }\n        }\n      }\n    }\n  ", variables))))))];
}

var none = /* None */0;

var dummySession = /* record */[
  /* token */"",
  /* user : record */[
    /* email */"andreas@sentia.io",
    /* forenames */"Andreas",
    /* lastname */"M\xc3\xb8ller"
  ]
];

exports.none         = none;
exports.flip         = flip;
exports.dummySession = dummySession;
exports.login        = login;
/* Data Not a pure module */
